# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

#      - name: Login to Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: docker.io
#          username: ${{ secrets.REGISTRY_USERNAME }}
#          password: ${{ secrets.REGISTRY_PASSWORD }}
#        if: github.event_name == 'push'

      - name: Declare tag variable as artifact
        id: vars
        shell: bash
        run: |
          echo -n $(git rev-parse --short HEAD) >tag
          # if it is a tag, use the tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
                echo -n ${GITHUB_REF#refs/tags/} >tag
          fi
          echo "tag=$(cat tag)" >>$GITHUB_ENV

      - name: Declare version as  variable
        id: vars
        shell: bash
        run: |
          export APP_VERSION=$(awk '/^version/{gsub(/\"/,"",$2);print $2}' build.gradle)
          echo $APP_VERSION # debug to print the extracted text of "2020.1-BETA"
#           export APP_VERSION=$(awk '/^version/{gsub(/\"/,"",$2);print $2}' build.gradle)
#    - echo $APP_VERSION # debug to print the extracted text of "2020.1-BETA"

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
#        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        with:
          image: mastilovic/rekreativ
          tags: ${APP_VERSION}, latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  #BELOW WORKS AS WELL FOR BUILDING AND PUSHING TO DOCKER
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build & push Docker image
#        uses: docker/build-push-action@v5
#        with:
#          tags: mastilovic/rekreativ:${{ env.tag }}, mastilovic/rekreativ:latest
#          context: .
#          push: true

